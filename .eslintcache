[{"/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/index.js":"1","/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/App.js":"2","/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/reportWebVitals.js":"3","/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/Search.js":"4","/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/MovieCard.js":"5"},{"size":500,"mtime":1607019988297,"results":"6","hashOfConfig":"7"},{"size":298,"mtime":1607025627550,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607019988299,"results":"9","hashOfConfig":"7"},{"size":1419,"mtime":1607033235688,"results":"10","hashOfConfig":"7"},{"size":633,"mtime":1607372607268,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6y8n6j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/index.js",[],["24","25"],"/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/App.js",[],"/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/reportWebVitals.js",[],"/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/Search.js",["26"],"import React, {Component, useState} from 'react'\nimport MovieCard from './MovieCard'\n\nfunction Search(){\n\n    const [query, setQuery] = useState('')\n    const [movies, setMovies] = useState([])\n\n    const searchMovies = async (e) => {\n        e.preventDefault()\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=7619231026c603823636130b344849dc&language=en-US&query=${query}&page=1&include_adult=false`\n        \n        try{\n            const res = await fetch(url)\n            const data = await res.json()\n            setMovies(data.results)\n        }catch(err){\n            console.error(err)\n        }\n    }\n    return(\n        <>\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                <input \n                    className=\"input\" \n                    type=\"text\" \n                    name=\"query\" \n                    placeholder=\"Search\"\n                    value={query} onChange={(e) => setQuery(e.target.value)}>\n                </input>\n                <button className=\"button\" type=\"submit\">Search</button>\n            </form>\n            <div className=\"card-list\">\n                {movies.filter(movie => movie.poster_path).map(movie => (\n                    <MovieCard movie={movie} key={movie.id}/>\n                ))}\n            </div>\n\n        </>\n    )\n}\n\n \nexport default Search","/Users/mylesjeffery/Documents/Websites/movie-search-app/movie-search-app/src/MovieCard.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]